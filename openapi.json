{
  "openapi": "3.0.1",
  "info": {
    "title": "TMPL E-commerce API",
    "version": "1.0.0",
    "description": "A basic API for handling E-commerce operations, built as a portfolio project of the Codecademy Full-Stack Engineer course. Currently there are five main routers: Auth, Cart, Orders, Products, and Users. Paths will be listed as they appear in the source code."
  },
  "paths": {
    "/auth/login": {
      "summary": "Gets the login form page",
      "description": "This path is used to render the login form page.",
      "get": {
        "summary": "returns the login form page",
        "description": "This path returns the login form page",
        "operationId": "get_login_form",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Login"
        ]
      }
    },
    "/auth/login/password": {
      "summary": "This path redirects a user based on login form input.",
      "description": "On successful login, a user is redirected to the home page. On login failure, user is redirected to /auth/login.",
      "post": {
        "summary": "authenticates user.",
        "description": "This method redirects the user to either the homepage or the login page on authentication success or failure, respectively.",
        "operationId": "login_auth",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Login"
        ]
      }
    },
    "/auth/logout": {
      "summary": "This path logs out the user.",
      "description": "This path logs out a user and returns them to the homepage.",
      "post": {
        "summary": "Logs the current user out",
        "description": "This operation logs the user out and returns them to the homepage.",
        "operationId": "logout",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Logout"
        ]
      }
    },
    "/auth/signup": {
      "summary": "this path handles the signup form and signup operations",
      "description": "This path renders the signup form and also pushes new users into the database after error-checking.",
      "get": {
        "summary": "Renders the signup form",
        "description": "This renders the signup form for new users.",
        "operationId": "get_signup_form",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Signup"
        ]
      },
      "post": {
        "summary": "Validates a new user.",
        "description": "Checks input from the signup form and tests to see if user already exists. If not, the information is pushed to the Users table in the database.",
        "operationId": "post_signup_auth",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Signup"
        ]
      }
    },
    "/cart/": {
      "summary": "Works with data in the users cart.",
      "description": "Cart holds information about the users cart.",
      "get": {
        "summary": "Returns cart data of the user",
        "description": "Creates a temporary table linking information about the cart, items in the cart, and relevant product information.",
        "operationId": "get_cart",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Cart"
        ]
      },
      "post": {
        "summary": "creates a new cart.",
        "description": "Creates a new cart tied to the user by id.",
        "operationId": "create_cart",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "summary": "Deletes a users cart and associated items",
        "description": "Deletes a cart; deletion cascades through cart_item table.",
        "operationId": "delete_cart",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/:cartId/checkout": {
      "summary": "Checks out the cart.",
      "description": "Performs checkout logic and moves cart table data into orders table data.",
      "post": {
        "summary": "Performs checkout logic on users cart",
        "description": "Performs checkout logic, and, on successful checkout, moves cart and cart_items into order and order_items table, then clears the cart.",
        "operationId": "cart_checkout",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Checkout"
        ]
      }
    },
    "/cart/:cartid": {
      "summary": "Works with information returned by the id of the users cart.",
      "description": "allows operations to be performed on the cart_item and cart table based on id.",
      "put": {
        "summary": "Puts products into cart_item table and updates the cart table",
        "description": "Receives the product_id and quantity to put into cart_items along with the related cart_id. Updates the cart total price and time when modified.",
        "operationId": "put_items_in_cart",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "summary": "Deletes an item from the cart.",
        "description": "Deletes the product_id found in the request body from the cart_item table. Updates the cart table to reflect the new total price and modification time.",
        "operationId": "delete_item_from_cart",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/orders/": {
      "summary": "Gets order history of user",
      "description": "Returns the entire order list of the current user.",
      "get": {
        "summary": "Gets the entire order history of a user",
        "description": "Gets every order a user has placed, returning the entire order table by user id.",
        "operationId": "get_orders",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/:orderId": {
      "summary": "Gets a single order from order history.",
      "description": "Returns a single order from the users order history.",
      "get": {
        "summary": "Returns information about a single order",
        "description": "Selects a single order by id using the users id.",
        "operationId": "get_order_by_id",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/products/": {
      "summary": "Holds all products",
      "description": "Contains all products and description.",
      "get": {
        "summary": "Returns all product data",
        "description": "Selects all product data from the products table",
        "operationId": "get_products",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/categories": {
      "summary": "Holds all products by category",
      "description": "Shows specific categories",
      "get": {
        "summary": "Gets different categories of products",
        "description": "Returns a list of all product categories",
        "operationId": "get_product_categories",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/categories/:category": {
      "summary": "Products within a given category",
      "description": "Contains all products in a given category",
      "get": {
        "summary": "Returns products within given category",
        "description": "Selects the category by id and returns the name of the category along with the associated products.",
        "operationId": "get_single_category",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/:id": {
      "summary": "Allows operations on products by id",
      "description": "Allows individual products to be edited or displayed",
      "get": {
        "summary": "Gets a single product",
        "description": "Selects a single product and relevant category information by product_id",
        "operationId": "get_product_by_id",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/users/:id": {
      "summary": "Information on a specific user by id ",
      "description": "Allows operations on a single user by id",
      "get": {
        "summary": "Returns all information about a single user.",
        "description": "Returns all values from the user table where id matches the parameter.",
        "operationId": "get_single_user",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "summary": "Updates user information",
        "description": "Allows a user to update their email, first and/or last name, and logs the modification time.",
        "operationId": "update_user",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Deletes a single user",
        "description": "Removes all user data from the users table based on id",
        "operationId": "delete_user",
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        },
        "tags": [
          "Users"
        ]
      }
    }
  }
}